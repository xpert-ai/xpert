include:
  - ./docker/docker-compose.infra.yml

volumes:
  api_data:

services:

  api:
    image: xpert-api:latest
    build:
      context: .
      dockerfile: .deploy/api/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
        API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
        CLIENT_BASE_URL: ${CLIENT_BASE_URL:-http://localhost:4200}
    environment:
      # HOST: ${API_HOST:-api}
      # PORT: ${API_PORT:-3000}
      NODE_OPTIONS: "--max-old-space-size=8192"
      NODE_ENV: ${NODE_ENV:-development}
      DB_HOST: db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      OLAP_HOST: olap
      OLAP_PORT: 8080
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      SENTRY_DSN: ${SENTRY_DSN:-}
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    entrypoint: './entrypoint.compose.sh'
    command: [ 'pm2-runtime', 'main.js' ]
    restart: on-failure
    depends_on:
      - db
      - redis
    links:
      - db:${DB_HOST:-db}
    ports:
      - '${API_PORT:-3000}:3000'
    volumes:
      - ./docker/api/public:/srv/pangolin/public
      - ./docker/api/ms-playwright:/ms-playwright
      - ./docker/api/sandbox/:/sandbox/
    networks:
      - overlay

  webapp:
    image: xpert-webapp:latest
    build:
      context: .
      dockerfile: .deploy/webapp/Dockerfile
      args:
        NODE_ENV: ${NODE_ENV:-development}
    environment:
      HOST: ${WEB_HOST:-webapp}
      NODE_ENV: ${NODE_ENV:-development}
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL:-http://localhost:4200}
      SENTRY_DSN: ${SENTRY_DSN:-}
      DEFAULT_LATITUDE: ${DEFAULT_LATITUDE:-42.6459136}
      DEFAULT_LONGITUDE: ${DEFAULT_LONGITUDE:-23.3332736}
      DEFAULT_CURRENCY: ${DEFAULT_CURRENCY:-USD}
      API_HOST: api
      API_PORT: 3000
      ENABLE_LOCAL_AGENT: false
    entrypoint: './entrypoint.compose.sh'
    command: ['nginx', '-g', 'daemon off;']
    env_file:
      - .env
    restart: on-failure
    links:
      - api:${API_HOST:-api}
    depends_on:
      - api
    ports:
      - ${WEB_PORT:-80}:80
      # - 443:443
    volumes:
      - ./docker/volumes/webapp/:/webapp/
    networks:
      - overlay
