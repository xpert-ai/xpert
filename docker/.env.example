# set true if running inside Docker container
IS_DOCKER=true

NODE_ENV=production
# LOG_LEVEL=debug

# WEB_PORT=80
# API_PORT=3000
# set to API base URL
API_BASE_URL=//localhost:3000
CLIENT_BASE_URL=//localhost

# set true if running as a Demo
DEMO=false
ENABLE_LOCAL_AGENT=false
#Installation 1.standalone 2.with-doris 3.with-starrocks
INSTALLATION_MODE=standalone

ALLOW_SUPER_ADMIN_ROLE=true

# DB_TYPE: sqlite | postgres
DB_TYPE=postgres

# PostgreSQL Connection Parameters
DB_NAME=ocap
DB_USER=postgres
DB_PASS=ocap_password

# JWT Session
SESSION_SECRET=metad_ocap
JWT_SECRET=jwtSecret
JWT_REFRESH_SECRET=jwtRefreshSecret
jwtExpiresIn=1h
jwtRefreshExpiresIn=7d

# Redis
REDIS_PASSWORD=redisPassword

SECRETS_ENCRYPTION_KEY=your_secrets_encryption_key

# ------------------------------
# Plugins Configuration
# ------------------------------

# PLUGINS=@xpert-ai/plugin-

# ------------------------------
# Vector Database Configuration
# ------------------------------

# The type of vector store to use.
# Supported values are `pgvector`, `milvus`, `chroma`.
VECTOR_STORE=pgvector

# Milvus configuration. Only available when VECTOR_STORE is `milvus`.
# The milvus uri.
MILVUS_URI=http://host.docker.internal:19530
MILVUS_DATABASE=
MILVUS_TOKEN=
MILVUS_USER=root
MILVUS_PASSWORD=Milvus
MILVUS_ENABLE_HYBRID_SEARCH=False
MILVUS_ANALYZER_PARAMS=

# Chroma configuration, only available when VECTOR_STORE is `chroma`
CHROMA_URL=http://localhost:8000
CHROMA_HOST=127.0.0.1
CHROMA_PORT=8000
CHROMA_TENANT=default_tenant
CHROMA_DATABASE=default_database
CHROMA_AUTH_PROVIDER=chromadb.auth.token_authn.TokenAuthClientProvider
CHROMA_AUTH_CREDENTIALS=

# The Weaviate endpoint URL. Only available when VECTOR_STORE is `weaviate`.
WEAVIATE_URL=http://weaviate:8080
WEAVIATE_API_KEY=vvf5ythahlkywhgusmcrgsx3td5ngdn8pkih

# ------------------------------
# SSO Configuration
# ------------------------------

TWITTER_CLIENT_ID=XXXXXXX
TWITTER_CLIENT_SECRET=XXXXXXX
TWITTER_CALLBACK_URL=http://localhost:3000/api/auth/twitter/callback

GOOGLE_CLIENT_ID=XXXXXXX
GOOGLE_CLIENT_SECRET=XXXXXXX
GOOGLE_CALLBACK_URL=http://localhost:3000/api/auth/google/callback

FACEBOOK_CLIENT_ID=XXXXXXX
FACEBOOK_CLIENT_SECRET=XXXXXXX
FACEBOOK_CALLBACK_URL=http://localhost:3000/api/auth/facebook/callback
FACEBOOK_GRAPH_VERSION=v3.0

LARK_APP_ID=
LARK_APP_SECRET=
LARK_VERIFICATION_TOKEN=
LARK_ENCRYPT_KEY=
LARK_TENANT_ID=
LARK_ORGANIZATION_ID=
LARK_REDIRECT_URL=http://localhost:3000/api/auth/feishu/callback
LARK_APP_TYPE=internal # public 类型的 App 就得提供 appTicket
LARK_ROLE_NAME=VIEWER

GITHUB_CLIENT_ID=<GitHub Client ID>
GITHUB_CLIENT_SECRET=<GitHub Client Secret>
GITHUB_CALLBACK_URL=http://localhost:3000/api/auth/github/callback

LINKEDIN_CLIENT_ID=XXXXXXX
LINKEDIN_CLIENT_SECRET=XXXXXXX
LINKEDIN_CALLBACK_URL=http://localhost:3000/api/auth/linked/callback

MICROSOFT_CLIENT_ID=XXXXXXX
MICROSOFT_CLIENT_SECRET=XXXXXXX
MICROSOFT_RESOURCE=XXXXXXX
MICROSOFT_TENANT=XXXXXXX
MICROSOFT_CALLBACK_URL=http://localhost:3000/api/auth/microsoft/callback

FIVERR_CLIENT_ID=XXXXXXX
FIVERR_CLIENT_SECRET=XXXXXXX

AUTH0_CLIENT_ID=XXXXXXX
AUTH0_CLIENT_SECRET=XXXXXXX
AUTH0_DOMAIN=XXXXXXX

KEYCLOAK_REALM=XXXXXXX
KEYCLOAK_CLIENT_ID=XXXXXXX
KEYCLOAK_SECRET=XXXXXXX
KEYCLOAK_AUTH_SERVER_URL=XXXXXXX
KEYCLOAK_COOKIE_KEY=XXXXXXX

INTEGRATED_HUBSTAFF_USER_PASS=hubstaffPassword
UPWORK_CALLBACK_URL=http://localhost:3000/api/integrations/upwork

# ------------------------------
# File System Configuration
# ------------------------------

# File System
FILE_PROVIDER=LOCAL # LOCAL, S3, OSS

# AWS Config
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_S3_BUCKET=

# Alibaba Cloud OSS Config
ALIYUN_ACCESS_KEY_ID=
ALIYUN_ACCESS_KEY_SECRET=
ALIYUN_REGION=
ALIYUN_OSS_ENDPOINT=oss-cn-shanghai.aliyuncs.com
ALIYUN_OSS_BUCKET=

# ------------------------------
# Email Configuration
# ------------------------------

# SMTP Mail Config
MAIL_FROM_ADDRESS=<Mail From Address>
MAIL_HOST=<Mail Host>
MAIL_PORT=<Mail Port>
MAIL_USERNAME=<Mail Username>
MAIL_PASSWORD=<Mail Password>

# Sentry Client Key
SENTRY_DSN=

# Default Currency
DEFAULT_CURRENCY=CNY

# Default Country
DEFAULT_COUNTRY=CN

# Google Maps API Key
GOOGLE_MAPS_API_KEY=

# Chatwoot SDK Token
CHATWOOT_SDK_TOKEN=

# Restrict Access to Google Place Autocomplete
GOOGLE_PLACE_AUTOCOMPLETE=false

# Nebular CHAT API key for a map message type (which is required by Google Maps)
CHAT_MESSAGE_GOOGLE_MAP=

# Default Latitude and Longitude
DEFAULT_LATITUDE=
DEFAULT_LONGITUDE=

CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=

# Keymetrics settings (optional)
KEYMETRICS_SECRET_KEY=
KEYMETRICS_PUBLIC_KEY=
PM2_APP_NAME=metad
PM2_API_NAME=metad_api
WEB_CONCURRENCY=1
WEB_MEMORY=4096

# Toolsets
TAVILY_API_KEY=
SEARCHAPI_API_KEY=
EXASEARCH_API_KEY=

# ------------------------------
# Environment Variables for milvus Service
# (only used when VECTOR_STORE is milvus)
# ------------------------------
# ETCD configuration for auto compaction mode
ETCD_AUTO_COMPACTION_MODE=revision
# ETCD configuration for auto compaction retention in terms of number of revisions
ETCD_AUTO_COMPACTION_RETENTION=1000
# ETCD configuration for backend quota in bytes
ETCD_QUOTA_BACKEND_BYTES=4294967296
# ETCD configuration for the number of changes before triggering a snapshot
ETCD_SNAPSHOT_COUNT=50000
# MinIO access key for authentication
MINIO_ACCESS_KEY=minioadmin
# MinIO secret key for authentication
MINIO_SECRET_KEY=minioadmin
# ETCD service endpoints
ETCD_ENDPOINTS=etcd:2379
# MinIO service address
MINIO_ADDRESS=minio:9000
# Enable or disable security authorization
MILVUS_AUTHORIZATION_ENABLED=true
